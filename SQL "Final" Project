/* 1) Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to"). */ 

SELECT CustomerId, FirstName, LastName, Country
FROM customers 
WHERE Country <> "USA"
;

/* 2) Show only the Customers from Brazil. */

SELECT CustomerId, FirstName, LastName
FROM customers
WHERE Country = "Brazil"
;

/* 3) Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country. */

SELECT c.CustomerId, c.FirstName, c.LastName, i.InvoiceDate, i.BillingCountry
FROM customers c
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE Country = "Brazil"
;

/* 4) Show the Employees who are Sales Agents. */

SELECT EmployeeId, FirstName, LastName, Title
FROM employees
WHERE Title = 'Sales Support Agent'
;

SELECT EmployeeId, FirstName, LastName, Title
FROM employees
WHERE Title LIKE '%Sales% %Agent%'
;

/* 5) Find a unique/distinct list of billing countries from the Invoice table. */

SELECT BillingCountry, COUNT(BillingCountry) As NumberOfInvoices2013
FROM invoices
WHERE InvoiceDate LIKE "%2013%"
GROUP BY BillingCountry
ORDER BY NumberOfInvoices2013 desc
;

/* 6) Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name. */

SELECT COUNT(i.InvoiceId) AS NumberOfInvoices, e.EmployeeId, e.FirstName, e.LastName, e.Title
FROM customers c
INNER JOIN employees e
ON c.SupportRepId = e.EmployeeId
LEFT JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title LIKE "%Sales% %Agent%"
GROUP BY EmployeeId
;

/* 7) Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers. */

SELECT i.Total, c.FirstName AS c_FirstName, c.LastName AS c_LastName, c.Country, e.FirstName AS sa_FirstName, e.LastName AS sa_LastName
FROM customers c
INNER JOIN employees e
ON c.SupportRepId = e.EmployeeId
LEFT JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title LIKE "%Sales% %Agent%"
ORDER BY c.Country
;

/* 8) How many Invoices were there in 2009? */

SELECT COUNT(InvoiceId) AS NumberOfInvoices2009
FROM invoices
WHERE InvoiceDate LIKE "2009%"
;

/* 9) What are the total sales for 2009? */ 

WITH Sales AS 
    (
    SELECT SUM(UnitPrice * Quantity) AS Sales2009
    FROM invoice_items ii
    INNER JOIN invoices i
    ON ii.InvoiceId = i.InvoiceId
    WHERE i.InvoiceDate LIKE "2009%"
    )
SELECT ROUND(Sales2009, 2) AS TotalSales2009
FROM Sales
;

/* 10) Write a query that includes the purchased track name with each invoice line ID. */

SELECT t.TrackId, t.Name, ii.InvoiceId
FROM tracks t
LEFT JOIN invoice_items ii
ON t.TrackId = ii.TrackId
WHERE ii.InvoiceId IS NOT NULL
;

/* 11) Write a query that includes the purchased track name AND artist name with each invoice line ID. */

SELECT t.TrackId, t.Name AS TrackName, ar.Name AS ArtistName, ii.InvoiceId
FROM tracks t
JOIN invoice_items ii
ON t.TrackId = ii.TrackId
JOIN albums a
ON t.AlbumId = a.AlbumId
JOIN artists ar
ON a.ArtistId = ar.ArtistId
WHERE ii.InvoiceId IS NOT NULL
;

/* 12) Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre. */

SELECT t.Name AS TrackName, a.Title AS AlbumName, mt.Name AS MediaType, g.Name AS GenreName
FROM tracks t 
JOIN albums a 
ON t.AlbumId = a.AlbumId
JOIN media_types mt
ON t.MediaTypeId = mt.MediaTypeId
JOIN genres g
ON t.GenreId = g.GenreId
;

/* 13) Show the total sales made by each sales agent. */

WITH Sales AS 
    (
    SELECT e.EmployeeId, e.Firstname, e.LastName, e.Title, SUM(ii.UnitPrice * ii.Quantity) AS TotalSales
    FROM employees e
    JOIN customers c
    ON e.EmployeeId = c.SupportRepId 
    JOIN invoices i
    ON c.CustomerId = i.CustomerId
    JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
    WHERE e.Title LIKE "%Sales% %Agent%"
    GROUP BY e.EmployeeId
    )
SELECT EmployeeId, Firstname, LastName, Title, ROUND(TotalSales,2) AS TotalAgentSales
FROM Sales
;

/* 14) Which sales agent made the most dollars in sales in 2009? */

WITH Sales AS 
    (
    SELECT e.EmployeeId, e.Firstname, e.LastName, e.Title, SUM(ii.UnitPrice * ii.Quantity) AS TotalSales
    FROM employees e
    JOIN customers c
    ON e.EmployeeId = c.SupportRepId 
    JOIN invoices i
    ON c.CustomerId = i.CustomerId
    JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
    WHERE e.Title LIKE "%Sales% %Agent%"
    AND i.InvoiceDate LIKE "2009%"
    GROUP BY e.EmployeeId
    ORDER BY TotalSales desc
    LIMIT 1
    )
SELECT EmployeeId, Firstname, LastName, Title, ROUND(TotalSales,2) AS TotalAgentSales
FROM Sales
;

/* 15) Show the top 5 countries with the highest total sales. */ 

With Sales AS 
    (
    SELECT i.BillingCountry, SUM(ii.UnitPrice * ii.Quantity) AS TotalSales
    FROM invoices i 
    JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
    GROUP BY i.BillingCountry
    ORDER BY TotalSales desc
    LIMIT 5
    )
SELECT BillingCountry, ROUND(TotalSales, 2) AS TotalSalesByCountry
FROM Sales
;

/* 16) Find the track with the longest duration and display its name, album, and artist. */

SELECT t.Name AS TrackName, a.Title AS AlbumTitle, ar.Name AS ArtistName, (t.Milliseconds/60000) AS MinLength
FROM tracks t
JOIN albums a
ON t.AlbumId = a.AlbumId
JOIN artists ar
ON a.ArtistId = ar.ArtistId
ORDER BY MinLength desc
LIMIT 1
;

/* 17) Show the average total spent per customer. */

WITH Spent AS 
    (
    SELECT c.CustomerId, c.FirstName, c.LastName, SUM(ii.UnitPrice * ii.Quantity) AS TotalSpent
    FROM customers c
    JOIN invoices i
    ON c.CustomerId = i.CustomerId
    JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
    GROUP BY c.CustomerId
    )
SELECT CustomerId, FirstName, LastName, ROUND(TotalSpent, 2) AS TotalSpentByCustomer
FROM Spent
;

/* 18) Identify the customer with the highest lifetime spending. */

WITH Spent AS 
    (
    SELECT c.CustomerId, c.FirstName, c.LastName, SUM(ii.UnitPrice * ii.Quantity) AS TotalSpent
    FROM customers c
    JOIN invoices i
    ON c.CustomerId = i.CustomerId
    JOIN invoice_items ii
    ON i.InvoiceId = ii.InvoiceId
    GROUP BY c.CustomerId
    ORDER BY TotalSpent desc
    LIMIT 1
    )
SELECT CustomerId, FirstName, LastName, ROUND(TotalSpent, 2) AS TotalSpentByCustomer
FROM Spent
;

/* 19) Identify the top 5 albums with the most tracks and list its name, artist, and track count. */

SELECT COUNT(t.TrackId) AS NumberOfTracks, a.Title AS AlbumTitle, ar.Name AS ArtistName
FROM tracks t
JOIN albums a
ON t.AlbumId = a.AlbumId
JOIN artists ar
ON a.ArtistId = ar.ArtistId
GROUP BY AlbumTitle
ORDER BY NumberOfTracks desc
LIMIT 5
;

/* 20) List the customers who have made purchases from North America. */

WITH Spent AS 
    (
    SELECT c.CustomerId, c.FirstName, c.LastName, i.BillingCountry, SUM(ii.UnitPrice * ii.Quantity) AS TotalSpent
    FROM customers c
    JOIN invoices i
    ON c.CustomerId = i.CustomerId
    JOIN invoice_items ii
    ON ii.InvoiceId = i.InvoiceId
    WHERE BillingCountry LIKE "%USA%"
    OR BillingCountry LIKE "%Canada%"
    OR BillingCountry LIKE "%Mexico%"
    GROUP BY c.CustomerId
    ORDER BY BillingCountry, TotalSpent desc
    )
SELECT CustomerId, FirstName, LastName, BillingCountry, ROUND(TotalSpent, 2)
FROM Spent
;
